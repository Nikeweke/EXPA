{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{217:function(t,e,r){\"use strict\";r.r(e);var a=r(0),i=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"div\",{staticClass:\"content\"},[t._m(0),t._v(\" \"),r(\"ul\",[r(\"li\",[r(\"a\",{attrs:{href:\"https://habr.com/ru/company/dataart/blog/262817/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Habr\"),r(\"OutboundLink\")],1)]),t._v(\" \"),r(\"li\",[r(\"a\",{attrs:{href:\"https://dataart.ua/news/autentifikatsiya-i-avtorizatsiya-v-mikroservisny-h-prilozheniyah/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Dataart\"),r(\"OutboundLink\")],1)]),t._v(\" \"),r(\"li\",[r(\"a\",{attrs:{href:\"http://softwaremaniacs.org/blog/2011/07/14/openid-oauth-difference/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"OAuth and OpenID\"),r(\"OutboundLink\")],1)])]),t._v(\" \"),r(\"p\",[t._v(\"Содержание\\n\")]),t._m(1),r(\"p\"),t._v(\" \"),r(\"hr\"),t._v(\" \"),t._m(2),t._v(\" \"),t._m(3),t._v(\" \"),t._m(4),t._v(\" \"),t._m(5),t._v(\" \"),t._m(6),t._v(\" \"),t._m(7),t._v(\" \"),t._m(8),t._v(\" \"),t._m(9),t._v(\" \"),t._m(10),t._v(\" \"),r(\"p\",[t._v(\"Работает это по следующему принципу: в веб-приложение включается HTML-форма, в которую пользователь должен ввести свои username/password и отправить их на сервер через HTTP POST для аутентификации. В случае успеха веб-приложение создает session token, который обычно помещается в browser cookies. При последующих веб-запросах session token автоматически передается на сервер и позволяет приложению получить информацию о текущем пользователе для авторизации запроса.\")]),t._v(\" \"),t._m(11),t._v(\" \"),r(\"p\",[t._v(\"Сертификат представляет собой набор атрибутов, идентифицирующих владельца, подписанный certificate authority (CA).\")]),t._v(\" \"),t._m(12),t._v(\" \"),r(\"p\",[t._v(\"Аутентификация по одноразовым паролям обычно применяется дополнительно к аутентификации по паролям для реализации two-factor authentication (2FA). В этой концепции пользователю необходимо предоставить данные двух типов для входа в систему:\")]),t._v(\" \"),t._m(13),t._v(\" \"),r(\"p\",[t._v(\"Этот способ чаще всего используется для аутентификации устройств, сервисов или других приложений при обращении к веб-сервисам. Здесь в качестве секрета применяются ключи доступа (access key, API key) — длинные уникальные строки, содержащие произвольный набор символов, по сути заменяющие собой комбинацию username/password.\")]),t._v(\" \"),t._m(14),t._v(\" \"),r(\"p\",[t._v(\"Такой способ аутентификации чаще всего применяется при построении распределенных систем Single Sign-On (SSO), где одно приложение (service provider или relying party) делегирует функцию аутентификации пользователей другому приложению (identity provider или authentication service). Типичный пример этого способа — вход в приложение через учетную запись в социальных сетях. Здесь социальные сети являются сервисами аутентификации, а приложение доверяет функцию аутентификации пользователей социальным сетям.\")]),t._v(\" \"),t._m(15),t._v(\" \"),t._m(16),t._v(\" \"),t._m(17),t._v(\" \"),t._m(18),t._v(\" \"),t._m(19),t._v(\" \"),t._m(20),t._v(\" \"),r(\"p\",[t._v(\"OpenID Connect возможности OAuth 2.0 уже интегрированы с самим протоколом.\")]),t._v(\" \"),r(\"p\",[t._v(\"Аналогия. OpenID — это ваш паспорт: он говорит, кто вы, но что он даёт, зависит от места, куда вы с ним пришли. OAuth — ключи от вашей машины: с ними можно ездить на вашей машине, даже не зная, как вас зовут.\")]),t._v(\" \"),r(\"p\",[t._v('Аналогия. \"Вход через OAuth\" — это ключи от машины, в которой по случаю оказались ещё и именные документы владельца.')])])},[function(){var t=this.$createElement,e=this._self._c||t;return e(\"h1\",{attrs:{id:\"аутентификации\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#аутентификации\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Аутентификации\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"table-of-contents\"},[e(\"ul\",[e(\"li\",[e(\"a\",{attrs:{href:\"#что-такое-идентификация-аутентификация-авторизация\"}},[this._v(\"Что такое идентификация, аутентификация, авторизация?\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#когда-испоnьзовать\"}},[this._v(\"Когда использовать?\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#виды\"}},[this._v(\"Виды\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#форматы-токенов\"}},[this._v(\"Форматы токенов\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#стандарты-oauth-и-openid-connect\"}},[this._v(\"Стандарты OAuth и OpenID Connect\")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"что-такое-идентификация-аутентификация-авторизация\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#что-такое-идентификация-аутентификация-авторизация\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Что такое идентификация, аутентификация, авторизация?\")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ul\",[r(\"li\",[r(\"em\",[t._v(\"Идентификация\")]),t._v(\" — процесс определения, что за человек перед нами.\")]),t._v(\" \"),r(\"li\",[r(\"em\",[t._v(\"Аутентификация\")]),t._v(\" — процесс подтверждения, что этот человек именно тот, за кого себя выдает.\")]),t._v(\" \"),r(\"li\",[r(\"em\",[t._v(\"Авторизация\")]),t._v(\" — процесс принятия решения о том, что именно этой аутентифицированной персоне разрешается делать.\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"когда-испоnьзовать\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#когда-испоnьзовать\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Когда использовать?\")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"table\",[r(\"thead\",[r(\"tr\",[r(\"th\",[r(\"strong\",[t._v(\"Способ\")])]),t._v(\" \"),r(\"th\",[r(\"strong\",[t._v(\"Основное применение\")])]),t._v(\" \"),r(\"th\",[r(\"strong\",[t._v(\"Протоколы\")])])])]),t._v(\" \"),r(\"tbody\",[r(\"tr\",[r(\"td\",[r(\"strong\",[t._v(\"По паролю\")])]),t._v(\" \"),r(\"td\",[t._v(\"Аутентификация пользователей\")]),t._v(\" \"),r(\"td\",[t._v(\"HTTP, Forms\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"strong\",[t._v(\"По сертификатам\")])]),t._v(\" \"),r(\"td\",[t._v(\"Аутентификация пользователей в безопасных приложениях; аутентификация сервисов\")]),t._v(\" \"),r(\"td\",[t._v(\"SSL/TLS\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"strong\",[t._v(\"По одноразовым паролям\")])]),t._v(\" \"),r(\"td\",[t._v(\"Дополнительная аутентификация пользователей (для достижения two-factor authentication)\")]),t._v(\" \"),r(\"td\",[t._v(\"Forms\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"strong\",[t._v(\"По ключам доступа\")])]),t._v(\" \"),r(\"td\",[t._v(\"Аутентификация сервисов и приложений\")]),t._v(\" \"),r(\"td\",[t._v(\"-\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"strong\",[t._v(\"По токенам\")])]),t._v(\" \"),r(\"td\",[t._v(\"Делегированная аутентификация пользователей; делегированная авторизация приложений\")]),t._v(\" \"),r(\"td\",[t._v(\"SAML, WS-Federation, OAuth, OpenID Connect\")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"виды\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#виды\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Виды\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"http-authentication\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http-authentication\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" HTTP authentication\")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ul\",[r(\"li\",[r(\"code\",[t._v(\"Basic\")]),t._v(\" - наиболее простая схема, при которой username и password пользователя передаются в заголовке Authorization в незашифрованном виде (base64-encoded).\")]),t._v(\" \"),r(\"li\",[r(\"code\",[t._v(\"Digest\")]),t._v(\" - Следующим этапом развития технологии стала чуть более сложная система HTTP digest authentication, которая исключает передачу учетных данных в открытом виде — здесь для проверки используется MD5-хеш с некоторыми примесями, что позволяет избежать подбора логина и пароля. Конечно, этот алгоритм выглядит более надежным, но и он подвержен целому ряду не самых сложных атак. Например, вот тут можно почитать об атаках более подробно.\")]),t._v(\" \"),r(\"li\",[r(\"code\",[t._v(\"NTLM\")]),t._v(\" - известная как Windows authentication\")]),t._v(\" \"),r(\"li\",[r(\"code\",[t._v(\"Negotiate\")]),t._v(\" - еще одна схема из семейства Windows authentication, которая позволяет клиенту выбрать между NTLM и Kerberos аутентификацией\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"forms-authentication\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#forms-authentication\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Forms authentication\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"blockquote\",[e(\"p\",[this._v(\"Для этого протокола нет определенного стандарта\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"аутентификация-по-сертификатам\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#аутентификация-по-сертификатам\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Аутентификация по сертификатам\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"аутентификация-по-одноразовым-пароnям\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#аутентификация-по-одноразовым-пароnям\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Аутентификация по одноразовым паролям\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"аутентификация-по-кnючам-доступа\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#аутентификация-по-кnючам-доступа\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Аутентификация по ключам доступа\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"аутентификация-по-токенам\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#аутентификация-по-токенам\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Аутентификация по токенам\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"форматы-токенов\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#форматы-токенов\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Форматы токенов\")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ul\",[r(\"li\",[r(\"p\",[r(\"strong\",[t._v(\"Simple Web Token (SWT)\")]),t._v(\" — наиболее простой формат, представляющий собой набор произвольных пар имя/значение в формате кодирования HTML form. Стандарт определяет несколько зарезервированных имен: Issuer, Audience, ExpiresOn и HMACSHA256. Токен подписывается с помощью симметричного ключа, таким образом оба IP- и SP-приложения должны иметь этот ключ для возможности создания/проверки токена.\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[r(\"strong\",[t._v(\"JSON Web Token (JWT)\")]),t._v(\" — содержит три блока, разделенных точками: заголовок, набор полей (claims) и подпись. Первые два блока представлены в JSON-формате и дополнительно закодированы в формат base64. Набор полей содержит произвольные пары имя/значения, притом стандарт JWT определяет несколько зарезервированных имен (iss, aud, exp и другие). Подпись может генерироваться при помощи и симметричных алгоритмов шифрования, и асимметричных. Кроме того, существует отдельный стандарт, отписывающий формат зашифрованного JWT-токена.\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[r(\"strong\",[t._v(\"Security Assertion Markup Language (SAML)\")]),t._v(\" — определяет токены (SAML assertions) в XML-формате, включающем информацию об эмитенте, о субъекте, необходимые условия для проверки токена, набор дополнительных утверждений (statements) о пользователе. Подпись SAML-токенов осуществляется при помощи ассиметричной криптографии. Кроме того, в отличие от предыдущих форматов, SAML-токены содержат механизм для подтверждения владения токеном, что позволяет предотвратить перехват токенов через man-in-the-middle-атаки при использовании незащищенных соединений.\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"стандарты-oauth-и-openid-connect\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#стандарты-oauth-и-openid-connect\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Стандарты OAuth и OpenID Connect\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"strong\",[this._v(\"OpenID\")]),this._v(\" - позволяет сайту удостовериться, что его пользователь владеет неким персональным URL (своим сайтом, блогом, профилем). Этого факта достаточно для того, чтобы использовать уникальный URL для узнавания того же самого пользователя в следующий раз. И всё. Все остальные вещи — заведение аккаунта, получение email'а и других данных, разрешение какой-то активности на сайте — остаётся на усмотрение сайта. Другими словами, OpenID — это чистая аутентификация: вы знаете, кто к вам пришёл, но вольны делать с этим знанием всё, что угодно.\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"strong\",[this._v(\"OAuth\")]),this._v(\" - позволяет программе (на вебе или локальной) получить от пользователя права на использование какого-то конкретного API. Права обозначаются токеном, свойства которого никак не определены: он может быть одинаковым для разных пользователей, может быть разным для одного в разное время. Всё, что гарантируется — это что программа в обмен на токен сможет выполнять какие-то действия на каком-то сервисе. Другими словами, OAuth — это чистая авторизация: вы обладаете конкретными правами, но не можете в общем случае по ним определить, кому они принадлежат.\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ul\",[e(\"li\",[this._v(\"OpenID — для проверки учетных данных пользователя (identification & authentication).\")]),this._v(\" \"),e(\"li\",[this._v(\"OAuth — про то, чтобы получать доступ к чему-то.\")]),this._v(\" \"),e(\"li\",[this._v(\"OpenID Connect — и про и то, и про другое одновременно.\")])])}],!1,null,null,null);e.default=i.exports}}]);","extractedComments":[]}