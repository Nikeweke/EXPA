(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{205:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jsdoc-style-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsdoc-style-guide","aria-hidden":"true"}},[t._v("#")]),t._v(" JSDoc-Style-Guide")]),t._v(" "),a("p",[t._v("Forked from the KimonoLabs JS Doc Style Guide")]),t._v(" "),a("p",[t._v("This guide was originally created by\n"),a("a",{attrs:{href:"https://github.com/shri",target:"_blank",rel:"noopener noreferrer"}},[t._v("Shri Ganeshram"),a("OutboundLink")],1),t._v(" as an internal style guide\nfor Kimono Labs and is licensed under the\n"),a("a",{attrs:{href:"http://opensource.org/licenses/MIT",target:"_blank",rel:"noopener noreferrer"}},[t._v("MIT License"),a("OutboundLink")],1),t._v(".\nYou are encouraged to fork this repository and make adjustments\naccording to your preferences. It is currently a work in progress.")]),t._v(" "),a("p",[t._v("You can learn more about JSDoc "),a("a",{attrs:{href:"http://usejsdoc.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"table-of-contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents","aria-hidden":"true"}},[t._v("#")]),t._v(" Table of Contents")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#table-of-contents"}},[t._v("Table of Contents")])]),a("li",[a("a",{attrs:{href:"#intro"}},[t._v("Intro")])]),a("li",[a("a",{attrs:{href:"#installation"}},[t._v("Installation")])]),a("li",[a("a",{attrs:{href:"#files"}},[t._v("Files")])]),a("li",[a("a",{attrs:{href:"#namespaces"}},[t._v("Namespaces")])]),a("li",[a("a",{attrs:{href:"#modules"}},[t._v("Modules")])]),a("li",[a("a",{attrs:{href:"#functions"}},[t._v("Functions")])]),a("li",[a("a",{attrs:{href:"#classes"}},[t._v("Classes")])]),a("li",[a("a",{attrs:{href:"#variables-and-constants"}},[t._v("Variables and Constants")])]),a("li",[a("a",{attrs:{href:"#links"}},[t._v("Links")])]),a("li",[a("a",{attrs:{href:"#examples"}},[t._v("Examples")])]),a("li",[a("a",{attrs:{href:"#tips"}},[t._v("Tips")])])])]),a("p"),t._v(" "),a("h3",{attrs:{id:"intro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intro","aria-hidden":"true"}},[t._v("#")]),t._v(" Intro")]),t._v(" "),a("p",[t._v("This style guide intends to use the most minimal set of\nJSDoc tags while maintaining a good standard of documentation\nfor even the largest of codebases.")]),t._v(" "),a("p",[t._v("JSDoc enables developers to generate documentation from comments\nwithin a Javascript codebase. It also forces a commenting style\nthroughout a codebase as an added benefit.")]),t._v(" "),a("p",[t._v("All JSDoc comments are of the forms:")]),t._v(" "),a("p",[a("em",[t._v("Single line:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** jsdoc comment here */")]),t._v("\n")])])]),a("p",[a("em",[t._v("Multiple lines:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** \n *  jsdoc comment here\n *  and here\n *  and even here\n */")]),t._v("\n")])])]),a("p",[t._v("You can mix normal comments in with JSDoc comments throughout\na codebase. At Kimono, we use the double slash // commenting\nstyle for non-JSDoc comments. JSDoc comments are used for\ndocumentation whereas the // commenting style is leveraged\nfor detail-oriented notes.")]),t._v(" "),a("p",[t._v("JSDoc leverages tags preceeded with the @ symbol in order to\nkeep track of relationships within the comments. For example\none can describe a function like this:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Takes 2 numbers and returns their sum.\n * @param   {number} a the first number\n * @param   {number} b the second number\n *\n * @returns {number} the sum of a and b\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addNumbers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Notice how different types of tags are separated by an empty\ncomment line. This helps with the readability of JSDoc tags.\nNote, the untagged description line isn't separated by an\nempty line from the first tag.")]),t._v(" "),a("p",[t._v("The first * of each line is vertically aligned. The type,\nparameter name, and descriptions are vertically aligned\nas well.")]),t._v(" "),a("p",[t._v("In the following section, we'll go over how to leverage and\ngroup tags throughout a javascript code base.")]),t._v(" "),a("h3",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[t._v("Prerequisite: Install and setup "),a("a",{attrs:{href:"http://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),a("OutboundLink")],1),t._v("\nand "),a("a",{attrs:{href:"http://gulpjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gulp"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Open up your shell in your project's root directory.")]),t._v(" "),a("p",[t._v("Install the most stable version of "),a("strong",[t._v("JSDoc")]),t._v(" and save into your\npackage.json file using the following command:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" git+git+https://github.com/jsdoc3/jsdoc.git -s\n")])])]),a("p",[t._v("Also install and add "),a("strong",[t._v("gulp-shell")]),t._v(" to your package.json file:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gulp-shell -s\n")])])]),a("p",[t._v("Create a file named "),a("strong",[t._v("conf.json")]),t._v(" with the following inside of\nit in your main directory:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"allowUnknownTags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"source"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"include"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lib"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exclude"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"includePattern"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".+\\\\.js(doc)?$"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"excludePattern"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(^|\\\\/|\\\\\\\\)_"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"templates"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cleverLinks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"monospaceLinks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"opts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"recurse"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"private"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("In the "),a("strong",[t._v("include")]),t._v(' array, add the relative paths to\nany folders or files you would like JSDoc to create\ndocumentation for. Here, recurse is set to true, so\nadding a folder will add all files within the folder\nwith the extensions ".js" or ".jsdoc".')]),t._v(" "),a("p",[t._v("You can also "),a("strong",[t._v("exclude")]),t._v(" folders and files by adding\ntheir relative paths to the exclude array.")]),t._v(" "),a("p",[t._v("Now, open your gulpfile (usally "),a("strong",[t._v("gulpfile.js")]),t._v(") and add\n"),a("strong",[t._v("gulp")]),t._v(" and "),a("strong",[t._v("gulp-shell")]),t._v(" as requirements. Also, add a\ntaskto recompile the JSDocs:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" gulp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gulp'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" shell "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gulp-shell'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ngulp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'createDocs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rm -rf out'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./node_modules/.bin/jsdoc -c conf.json'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("You can now compile the JSDoc documents by opening up\nthe project folder and running the "),a("strong",[t._v("createDocs")]),t._v(" command\nwith gulp:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("gulp createDocs\n")])])]),a("p",[t._v("The "),a("strong",[t._v('"out"')]),t._v(" folder in the project directory will now\nhave the generated docs. Open up the "),a("strong",[t._v("index.html")]),t._v('\nfile in the "out" folder to see the generated docs.')]),t._v(" "),a("p",[t._v('It\'s good practice to add the "createDocs" command to\nany watch tasks you may have setup in gulp. Also,\nremember to add the "out" folder to your '),a("strong",[t._v(".gitignore")]),t._v("\nif you would not like to check in the docs to your\nrepo.")]),t._v(" "),a("h3",{attrs:{id:"files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#files","aria-hidden":"true"}},[t._v("#")]),t._v(" Files")]),t._v(" "),a("p",[t._v("Document the top of files using the following style:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** \n *  @fileOverview Write what's going on in the file here.\n *\n *  @author       Shri Ganeshram\n *  @author       Jack Hanford\n *\n *  @requires     NPM:npm_module_1\n *  @requires     BOWER:bower_module_1\n *  @requires     EXTERNAL:@link{http://url.com module_name}\n *  @requires     path/to/file:your_module_2\n */")]),t._v("\n")])])]),a("p",[a("strong",[t._v("@fileOverview")]),t._v(" is followed by a simple description of\nthe contents of the file. If it's too difficult to fit\na description within a line or two, it probably means\nthe file needs to be broken into multiple files.")]),t._v(" "),a("p",[a("strong",[t._v("@author")]),t._v(" is followed by the name of an author. To add\nmultiple authors, use @author multiple times on\nseparate lines as seen above.")]),t._v(" "),a("p",[a("strong",[t._v("@requires")]),t._v(" uses the source followed by the module name.\nValid sources include (NPM, BOWER, EXTERNAL, and paths):")]),t._v(" "),a("p",[a("strong",[t._v("NPM")]),t._v(" -- used for NPM modules, followed by :module_name")]),t._v(" "),a("p",[a("strong",[t._v("BOWER")]),t._v(" -- used for Bower modules, followed by :module_name")]),t._v(" "),a("p",[a("strong",[t._v("EXTERNAL")]),t._v(" -- used for External Links, followed by the\n@link tag with a url to the module followed by its\nname in curly braces, e.g.\n@link{https://github.com/twbs/bootstrap Bootstrap}")]),t._v(" "),a("p",[a("strong",[t._v("paths")]),t._v(" -- used for modules within the codebase, use a\npath to the module from the root directory of the\ncode base to the module file followed by :module_name\ne.g. /toolbar/api_panel.js:API Panel")]),t._v(" "),a("h3",{attrs:{id:"namespaces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#namespaces","aria-hidden":"true"}},[t._v("#")]),t._v(" Namespaces")]),t._v(" "),a("p",[t._v("In javascript, you can simulate a namespace using\na javascript object.")]),t._v(" "),a("p",[t._v("Use the "),a("strong",[t._v("@namespace")]),t._v(" tag to label a namespace:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n *  Description of namespace here.\n *  @namespace\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Utils "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getUserName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("JSDoc will take care of the rest, creating a namespace\nnamed Utils with member function getUserName.")]),t._v(" "),a("p",[t._v("You can add member functions to a namespace if they are\nlocated outside of the namespace definition using\n"),a("strong",[t._v("@memberOf")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Takes 2 numbers and returns their sum.\n * @memberOf Utils\n *\n * @param   {number} a the first number\n * @param   {number} b the second number\n *\n * @returns {number} the sum of a and b\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addNumbers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nUtils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addNumbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" addNumbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Just follow the "),a("strong",[t._v("@memberOf")]),t._v(" tag with the name of\nthe namespace the function is a member of.")]),t._v(" "),a("h3",{attrs:{id:"modules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modules","aria-hidden":"true"}},[t._v("#")]),t._v(" Modules")]),t._v(" "),a("p",[t._v("Modules can be documented using the "),a("strong",[t._v("@module")]),t._v("\ntag in JSDoc:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * description of module here\n * @module ModuleName\n */")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("JSDoc is smart about figuring out that the member\nfunctions of module.exports belong to the module.")]),t._v(" "),a("p",[t._v("To add a "),a("strong",[t._v("private method or variable")]),t._v(" to a module,\nuse the "),a("strong",[t._v("@member")]),t._v(" tag.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @member MemberName */")]),t._v("\n")])])]),a("p",[t._v("For functions, you'll need to add an "),a("strong",[t._v("@function")]),t._v(" tag\nas well.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** \n * @member MemberName \n * @function\n */")]),t._v("\n")])])]),a("p",[t._v("Make sure the function tag comes after the member tag!")]),t._v(" "),a("p",[t._v("If for some reason JSDoc doesn't pick up the\nmodule, you can use the "),a("strong",[t._v("@exports")]),t._v(" tag:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @exports ModuleName */")]),t._v("\n")])])]),a("h3",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions","aria-hidden":"true"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("p",[t._v("Functions use the following comment style in\nJSDoc:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Takes 2 numbers and returns their sum.\n * @param   {number} a     the first number\n * @param   {number} b     the second number\n * @param   {number} [c=0] the optional third number\n *\n * @returns {number} the sum of a and b\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addNumbers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The first line in the comment is a succinct\ndescription of what the function does.")]),t._v(" "),a("p",[t._v("The "),a("strong",[t._v("@param")]),t._v(" tag is used to define parameters\nthe function takes as input. In this case\nthe function takes 3 parameters, a, b, and c.")]),t._v(" "),a("p",[t._v("The structure of the param tag for a "),a("strong",[t._v("required\nparameter")]),t._v(" is:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  @param "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" paramname param description\n")])])]),a("p",[t._v("'type' is the javascript type of the parameter\nwhich can take values of string, number, boolean,\nor Class, where Class represents the type of a\nuser defined class.")]),t._v(" "),a("p",[t._v("'paramname' is the name of the parameter.")]),t._v(" "),a("p",[t._v("'param description' is a description of what the\nparameter represents.")]),t._v(" "),a("p",[t._v("The structure of an "),a("strong",[t._v("optional parameter")]),t._v(" is the\nsame with the paramname in square brackets:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  @param "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("paramname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" param description\n")])])]),a("p",[t._v("The structure of an "),a("strong",[t._v("optional parameter with a\ndefault value")]),t._v(" is the same as an optional\nparameter's with an = followed by the default\nvalue for the param:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  @param "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("paramname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("default_value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" param description\n")])])]),a("p",[t._v("Optional tags "),a("strong",[t._v("@throws")]),t._v(" and "),a("strong",[t._v("@constructor")]),t._v(" can be used\nas well.")]),t._v(" "),a("p",[a("strong",[t._v("@throws")]),t._v(" defines a possible exception:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  @throws "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("exceptionName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("@constructor")]),t._v(" is used to label functions that\nare class constructors:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  @constructor\n")])])]),a("h3",{attrs:{id:"classes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#classes","aria-hidden":"true"}},[t._v("#")]),t._v(" Classes")]),t._v(" "),a("p",[t._v("Classes are defined similarly to functions with\ndifferent tags.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * A class to represent user's cars.\n * @class\n *\n * @constructor\n *\n * @property licensePlate the car's license plate number\n * @property vehicleType  the type of car\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Car")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("licensePlate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("licensePlate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" licensePlate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sedan"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("For classes, we use the first line to provide\na description of the class.")]),t._v(" "),a("p",[t._v("The "),a("strong",[t._v("@class")]),t._v(" tag is used to label the function\nas a class.")]),t._v(" "),a("p",[t._v("The "),a("strong",[t._v("@constructor")]),t._v(" tag is used to label the\nfunction as a constructor for the class.")]),t._v(" "),a("p",[t._v("The "),a("strong",[t._v("@property")]),t._v(" tag is used to define class\nproperties and is followed by the property name\nand the description of the property.")]),t._v(" "),a("h3",{attrs:{id:"variables-and-constants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables-and-constants","aria-hidden":"true"}},[t._v("#")]),t._v(" Variables and Constants")]),t._v(" "),a("p",[t._v("Variables can be documented using JSDoc.\nFor example:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * The current environment we're running in.\n * @type {string}\n */")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" currentEnvironment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEnvironment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The comment consists of a description in the\nfirst line followed by a "),a("strong",[t._v("@type")]),t._v(" tag in the\nsecond line.")]),t._v(" "),a("p",[t._v("Constants can be documented the same way as\nvariables except with a "),a("strong",[t._v("@constant")]),t._v(" tag:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * The environment we're running in.\n * @constant\n *\n * @type {string}\n */")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENVIRONMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"production"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#links","aria-hidden":"true"}},[t._v("#")]),t._v(" Links")]),t._v(" "),a("p",[t._v("External links can be used in various comments\nby using the "),a("strong",[t._v("@link")]),t._v(" tag:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Stolen from {http://stackoverflow.com/questions/11919065/sort-an-array-by-the-levenshtein-distance-with-best-performance-in-javascript Stackoverflow Levenshtein Distance}*/")]),t._v("\n")])])]),a("p",[t._v("The "),a("strong",[t._v("@link")]),t._v(" tag is followed by the url and its\ncaption in curly braces.")]),t._v(" "),a("h3",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("p",[t._v("To include an example in the code base, use the\n"),a("strong",[t._v("@example")]),t._v(" tag:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Takes 2 numbers and returns their sum.\n * @example \n * var a = 5,\n *     b = 6;\n *\n * var sum = addNumbers(5, 6); // sum is set to 11\n *\n * @param   {number} a the first number\n * @param   {number} b the second number\n *\n * @returns {number} the sum of a and b\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addNumbers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Use the "),a("strong",[t._v("@example")]),t._v(" tag within the comment block\nused to define a function, class, or constructor.")]),t._v(" "),a("h3",{attrs:{id:"tips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tips","aria-hidden":"true"}},[t._v("#")]),t._v(" Tips")]),t._v(" "),a("p",[t._v("Sublime Text users, check out\n"),a("a",{attrs:{href:"https://github.com/spadgos/sublime-jsdocs",target:"_blank",rel:"noopener noreferrer"}},[t._v("DocBlockr"),a("OutboundLink")],1),t._v(" in\n"),a("a",{attrs:{href:"http://wbond.net/sublime_packages/package_control",target:"_blank",rel:"noopener noreferrer"}},[t._v("Package Control"),a("OutboundLink")],1),t._v("\nfor autocomplete of JSDoc comments.")])])},[],!1,null,null,null);s.default=n.exports}}]);